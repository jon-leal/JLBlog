@page "/CreatePost/"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using JLBlog.Data
@using JLBlog.Services
@using System.IO;



@inject IWebHostEnvironment WebHostEnvironment
@inject AppDbContext DbContext
@inject NavigationManager NavigationManager
@*
<AuthorizeView>
    <Authorized>*@
         <EditForm Model="@post" OnValidSubmit="@HandleSubmit">

            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="title">Title:</label>
                <InputText id="title" class="form-control" @bind-Value="post.Title" />
            </div>
            <div class="form-group">
                <label for="introduction">Introduction:</label>
                <InputTextArea id="introduction" class="form-control" @bind-Value="post.Introduction" />
            </div>
            <div class="form-group">
                <label for="bodyText">Body Text:</label>
                <InputTextArea id="bodyText" class="form-control" @bind-Value="post.BodyText" />
            </div>
            <div class="form-group">
                <label for="image">Image:</label>
                <InputFile id="image" OnChange="@OnImageSelected" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>

@*    </Authorized>

    <NotAuthorized>
        <!-- Conteúdo que deve ser exibido para usuários não autenticados -->
        <p>Você precisa estar logado para acessar esta página.</p>
    </NotAuthorized>*@

@*</AuthorizeView>*@


@code {
    private Data.Post post = new Data.Post();
 
    private async Task HandleSubmit()
    {
        // Create a new Post entity and populate it with form data
        var newPost = new Data.Post
            {
                Title = post.Title,
                Introduction = post.Introduction,
                BodyText = post.BodyText,
                Image = uploadedImage.Name // Store the image filename instead of the path
            };

        // Add the new post to the database
        DbContext.Posts.Add(newPost);
        await DbContext.SaveChangesAsync();

        // Navigate to another page after successfully saving the post, e.g., the home page
        NavigationManager.NavigateTo("/");
    }

    private IBrowserFile uploadedImage;

    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        uploadedImage = e.File;

        // Ensure the img/articleMainImages folder exists
        var imagesPath = Path.Combine(WebHostEnvironment.WebRootPath, "img", "articleMainImages");
        Directory.CreateDirectory(imagesPath);

        // Save the image to the folder
        var imagePath = Path.Combine(imagesPath, uploadedImage.Name);
        using var imageStream = new FileStream(imagePath, FileMode.Create);
        await uploadedImage.OpenReadStream().CopyToAsync(imageStream);
    }
}
