@page "/CreatePost/"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using JLBlog.Data
@using JLBlog.Services
@using System.IO;



@inject IWebHostEnvironment WebHostEnvironment
@inject AppDbContext DbContext
@inject NavigationManager NavigationManager





<EditForm Model="@post" OnValidSubmit="@HandleSubmit">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="title">Titulo:</label>
        <InputText id="title" class="form-control" @bind-Value="post.Title" />
    </div>
    <br />
    <div class="form-group">
        <label for="introduction">Introdução:</label>
        <InputTextArea id="introduction" class="form-control" @bind-Value="post.Introduction" />
    </div>
    <br />
    <div class="form-group">
        <label for="bodyText">Conteúdo:</label>
        <InputTextArea id="bodyText" class="form-control" @bind-Value="post.BodyText" />
    </div>
    <br />
    <div class="form-group">
        <label for="image">Imagem de Capa:</label>
        <InputFile id="image" OnChange="@OnImageSelected" />
    </div>
    <br />
    <div class="form-group">
        <label for="postImages">Imagens do Conteúdo:</label>
        <InputFile id="postImages" OnChange="@OnPostImagesSelected" multiple />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Enviar</button>
</EditForm>



@code {
    private Data.Post post = new Data.Post();

    private async Task HandleSubmit()
    {
        // Create a new Post entity and populate it with form data
        var newPost = new Data.Post
            {
                Title = post.Title,
                Introduction = post.Introduction,
                BodyText = post.BodyText,
                Image = uploadedImage.Name,
                PostDate = DateTime.Now
            };

        // Add the new post to the database
        DbContext.Posts.Add(newPost);
        await DbContext.SaveChangesAsync();

        // Navigate to another page after successfully saving the post, e.g., the home page
        NavigationManager.NavigateTo("/");
    }

    private IBrowserFile uploadedImage;

    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        uploadedImage = e.File;

        // Ensure the img/articleMainImages folder exists
        var imagesPath = Path.Combine(WebHostEnvironment.WebRootPath, "img", "articleMainImages");
        Directory.CreateDirectory(imagesPath);

        // Save the image to the folder
        var imagePath = Path.Combine(imagesPath, uploadedImage.Name);
        using var imageStream = new FileStream(imagePath, FileMode.Create);
        await uploadedImage.OpenReadStream().CopyToAsync(imageStream);
    }

    private async Task OnPostImagesSelected(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();

        // Ensure the img/articlePostImages folder exists
        var imagesPath = Path.Combine(WebHostEnvironment.WebRootPath, "img", "articlePostImages");
        Directory.CreateDirectory(imagesPath);

        // Save each image to the folder
        foreach (var file in files)
        {
            var imagePath = Path.Combine(imagesPath, file.Name);
            using var imageStream = new FileStream(imagePath, FileMode.Create);
            await file.OpenReadStream().CopyToAsync(imageStream);
        }
    }


}